{"version":3,"sources":["store/currentTodo.ts","store/loading.ts","store/todos.tsx","store/index.ts","api.tsx","components/Loader/Loader.tsx","components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","currentTodo","type","payload","initialState","todos","filteredTodo","query","rootReducer","combineReducers","items","state","action","filter","todo","title","includes","toLowerCase","completed","loading","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useSelector","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","className","TodoFilter","dispatch","useDispatch","useState","status","setStutus","setQuery","useEffect","todosActions","value","onChange","event","target","placeholder","style","pointerEvents","onClick","TodoList","map","id","currentTodoActions","TodoModal","user","setUser","userId","href","email","name","App","loadingActions","todosFromServer","finally","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5eb34613.chunk.js","sourcesContent":["import { Todo } from '../type/Todo';\n\ntype CurrentTodoAction = {\n  type: 'todo/selected',\n  payload: Todo,\n};\n\ntype RemoveCurrentTodoAction = {\n  type: 'todo/remove',\n};\n\ntype TodoActions = CurrentTodoAction | RemoveCurrentTodoAction;\n\n// eslint-disable-next-line max-len\nexport const currentTodoReducer = (currentTodo: Todo | null = null, action: TodoActions) => {\n  switch (action.type) {\n    case 'todo/selected':\n\n      return action.payload;\n\n    case 'todo/remove':\n      return null;\n\n    default:\n      return currentTodo;\n  }\n};\n\nexport const actions = {\n  setCurrentTodo: (currentTodo: Todo): CurrentTodoAction => ({\n    type: 'todo/selected',\n    payload: currentTodo,\n  }),\n\n  removeCurrentTodo: (): RemoveCurrentTodoAction => ({\n    type: 'todo/remove',\n  }),\n};\n","type StartLoadingAction = {\n  type: 'loading/start',\n};\n\ntype FinishLoadingAction = {\n  type: 'loading/finish',\n};\n\nexport type LoadingAction = StartLoadingAction | FinishLoadingAction;\n\n// eslint-disable-next-line max-len\nexport const loadingReducer = (loading = false, action: LoadingAction): boolean => {\n  switch (action.type) {\n    case 'loading/start':\n      return true;\n\n    case 'loading/finish':\n      return false;\n\n    default:\n      return loading;\n  }\n};\n\nexport const actions = {\n  startLoading: (): StartLoadingAction => ({ type: 'loading/start' }),\n  finishLoading: (): FinishLoadingAction => ({ type: 'loading/finish' }),\n};\n","import { Todo } from '../type/Todo';\n\ntype SetTodosAction = {\n  type: 'todos/set',\n  payload: Todo[],\n};\n\ntype FilterTodosAllAction = {\n  type: 'todos/filter/all',\n  payload: string,\n};\n\ntype FilterTodosByCompletedAction = {\n  type: 'todos/filter/completed',\n  payload: string,\n};\n\ntype FilterTodosByActiveAction = {\n  type: 'todos/filter/active',\n  payload: string,\n};\n\ntype State = {\n  todos: Todo[],\n  filteredTodo: Todo[],\n};\n\nconst initialState = {\n  todos: [],\n  filteredTodo: [],\n};\n\ntype TodosActions = SetTodosAction\n| FilterTodosAllAction\n| FilterTodosByCompletedAction\n| FilterTodosByActiveAction;\n\n// eslint-disable-next-line max-len\nexport const todosReducer = (state: State = initialState, action: TodosActions) => {\n  switch (action.type) {\n    case 'todos/set':\n      return {\n        todos: action.payload,\n        filteredTodo: action.payload,\n      };\n\n    case 'todos/filter/all':\n      return {\n        ...state,\n        filteredTodo: state.todos.filter(\n          todo => todo.title.includes(action.payload.toLowerCase()),\n        ),\n      };\n\n    case 'todos/filter/completed':\n      return {\n        ...state,\n        filteredTodo: state.todos.filter(\n          todo => todo.completed\n          && todo.title.includes(action.payload.toLowerCase()),\n        ),\n      };\n\n    case 'todos/filter/active':\n      return {\n        ...state,\n        filteredTodo: state.todos.filter(\n          todo => !todo.completed\n          && todo.title.includes(action.payload.toLowerCase()),\n        ),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const actions = {\n  setTodos: (todos: Todo[]): SetTodosAction => ({\n    type: 'todos/set',\n    payload: todos,\n  }),\n\n  filterAllTodos: (query: string): FilterTodosAllAction => ({\n    type: 'todos/filter/all',\n    payload: query,\n  }),\n\n  filterByCompletedTodos: (query: string): FilterTodosByCompletedAction => ({\n    type: 'todos/filter/completed',\n    payload: query,\n  }),\n\n  filterByActiveTodos: (query: string): FilterTodosByActiveAction => ({\n    type: 'todos/filter/active',\n    payload: query,\n  }),\n\n};\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { currentTodoReducer } from './currentTodo';\nimport { loadingReducer } from './loading';\nimport { todosReducer } from './todos';\n\nconst rootReducer = combineReducers({\n  items: todosReducer,\n  loading: loadingReducer,\n  currentTodo: currentTodoReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { Todo } from './type/Todo';\nimport { User } from './type/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actions as todosActions } from '../../store/todos';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useDispatch();\n  const [status, setStutus] = useState('');\n  const [query, setQuery] = useState('');\n  const reset = () => {\n    setQuery('');\n  };\n\n  useEffect(() => {\n    switch (status) {\n      case 'completed':\n        dispatch(todosActions.filterByCompletedTodos(query));\n        break;\n\n      case 'active':\n        dispatch(todosActions.filterByActiveTodos(query));\n        break;\n\n      default:\n        dispatch(todosActions.filterAllTodos(query));\n    }\n  }, [query, status]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event) => setStutus(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={reset}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../store';\nimport { actions as currentTodoActions } from '../../store/currentTodo';\nimport { Todo } from '../../type/Todo';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useDispatch();\n  const currentTodo: Todo | null = useAppSelector(state => state.currentTodo);\n  const filteredTodo = useAppSelector(state => state.items.filteredTodo);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredTodo.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={\n              currentTodo?.id !== todo.id ? '' : 'has-background-info-light'\n            }\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            ) : (\n              <td className=\"is-vcentered\" />\n            )}\n\n            {todo.completed ? (\n              <td className=\"is-vcentered is-expanded\">\n                <p className=\"has-text-success\">{todo.title}</p>\n              </td>\n            ) : (\n              <td className=\"is-vcentered is-expanded\">\n                <p className=\"has-text-danger\">{todo.title}</p>\n              </td>\n            )}\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => dispatch(\n                  currentTodoActions.setCurrentTodo(todo),\n                )}\n              >\n                <span className=\"icon\">\n                  <i className={\n                    currentTodo?.id !== todo.id\n                      ? 'far fa-eye'\n                      : 'far fa-eye-slash'\n                  }\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../type/Todo';\nimport { actions as currentTodoActions } from '../../store/currentTodo';\nimport { useAppSelector } from '../../store';\nimport { User } from '../../type/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n};\n\nexport const TodoModal: React.FC<Props> = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const currentTodo: Todo | null = useAppSelector(state => state.currentTodo);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (currentTodo?.userId) {\n      getUser(+currentTodo.userId).then(setUser);\n    }\n  }, []);\n\n  return (\n\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => dispatch(currentTodoActions.removeCurrentTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {currentTodo?.completed ? (\n                <strong className=\"has-text-success\">\n                  Done\n                </strong>\n              ) : (\n                <strong className=\"has-text-danger\">\n                  Planned\n                </strong>\n              )}\n\n              {' by '}\n\n              <a href={user?.email}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getTodos } from './api';\nimport './App.scss';\nimport { Loader } from './components/Loader/Loader';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoList } from './components/TodoList';\nimport { TodoModal } from './components/TodoModal';\n\nimport { useAppSelector } from './store';\nimport { actions as loadingActions } from './store/loading';\nimport { actions as todosActions } from './store/todos';\n\nexport const App = () => {\n  const loading = useAppSelector(state => state.loading);\n  const dispatch = useDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    dispatch(loadingActions.startLoading());\n\n    getTodos()\n      .then((todosFromServer) => dispatch(\n        todosActions.setTodos(todosFromServer),\n      ))\n      .finally(() => dispatch(\n        loadingActions.finishLoading(),\n      ));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Redux list of todos</h1>\n      <>\n        <div className=\"section\">\n          <div className=\"container\">\n            <div className=\"box\">\n              <h1 className=\"title\">Todos:</h1>\n\n              <div className=\"block\">\n                <TodoFilter />\n              </div>\n\n              <div className=\"block\">\n                { loading ? (\n                  <Loader />\n                )\n                  : (\n                    <TodoList />\n                  )}\n\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {currentTodo && (\n          <TodoModal />\n        )}\n      </>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './store';\nimport { App } from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}